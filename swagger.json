{
  "openapi": "3.0.0",
  "info": {
    "title": "SWP391 Drug Prevention API",
    "version": "2.0.0",
    "description": "Clean API documentation for SWP391 Drug Prevention Platform - Only active endpoints\n\n**🔓 DEVELOPMENT TESTING:**\nTo test protected endpoints without authentication, add the header:\n`x-swagger-bypass: true`\n\nThis will bypass token verification and use a mock admin user for testing purposes."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Users"
    },
    {
      "name": "Categories"
    },
    {
      "name": "Enrolls"
    },
    {
      "name": "Surveys"
    },
    {
      "name": "Survey Responses"
    },
    {
      "name": "Blogs"
    },
    {
      "name": "Contents"
    },
    {
      "name": "Programs"
    },
    {
      "name": "BookingSessions"
    },
    {
      "name": "Slots"
    },
    {
      "name": "Flags"
    },
    {
      "name": "ConsultantSlots"
    },
    {
      "name": "Consultants"
    },
    {
      "name": "ConsoleLogs"
    },
    {
      "name": "Assessments"
    },
    {
      "name": "Actions"
    },
    {
      "name": "Profiles"
    },
    {
      "name": "Bookings"
    },
    {
      "name": "Dashboard"
    },
    {
      "name": "Staff"
    },
    {
      "name": "Member"
    },
    {
      "name": "GoogleAuth"
    },
    {
      "name": "Auth"
    }
  ],
  "components": {
    "schemas": {
      "DefaultResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "Question ID"
          },
          "question": {
            "type": "string",
            "example": "How confident are you in your knowledge?",
            "description": "Question text"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Not confident",
              "Somewhat confident",
              "Very confident"
            ],
            "description": "Available answer options"
          },
          "deleted": {
            "type": "boolean",
            "example": false,
            "description": "Whether the question is soft deleted"
          }
        },
        "required": [
          "id",
          "question",
          "options",
          "deleted"
        ]
      },
      "Survey": {
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "integer",
            "example": 1
          },
          "program_id": {
            "type": "integer",
            "example": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "pre-assessment",
              "post-assessment"
            ],
            "example": "pre-assessment"
          },
          "questions_json": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            },
            "description": "Survey questions (only non-deleted questions are returned)"
          }
        }
      },
      "SurveyResponse": {
        "type": "object",
        "properties": {
          "response_id": {
            "type": "integer",
            "example": 1
          },
          "survey_id": {
            "type": "integer",
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "nullable": true,
            "example": 5
          },
          "answer_json": {
            "type": "string",
            "description": "JSON string containing the response data"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00.000Z"
          }
        }
      },
      "SurveyResponseKeyValue": {
        "type": "object",
        "properties": {
          "response_id": {
            "type": "integer",
            "example": 123
          },
          "survey_id": {
            "type": "integer",
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "example": 5
          },
          "responses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "question": {
                  "type": "string",
                  "example": "How confident are you?"
                },
                "answer": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ],
                  "example": "Very confident"
                }
              }
            }
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-15T11:00:00.000Z"
          },
          "total_questions": {
            "type": "integer",
            "example": 5
          }
        }
      },
      "SurveyStatistics": {
        "type": "object",
        "properties": {
          "surveyId": {
            "type": "integer",
            "example": 1
          },
          "surveyType": {
            "type": "string",
            "example": "pre-assessment"
          },
          "programId": {
            "type": "integer",
            "example": 1
          },
          "totalResponses": {
            "type": "integer",
            "example": 25
          },
          "questionStatistics": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "questionId": {
                  "type": "integer"
                },
                "questionText": {
                  "type": "string"
                },
                "questionOptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "totalResponses": {
                  "type": "integer"
                },
                "answerCounts": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer"
                  }
                },
                "percentages": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number"
                  }
                },
                "totalAnswers": {
                  "type": "integer"
                },
                "uniqueAnswers": {
                  "type": "integer"
                },
                "mostCommonAnswer": {
                  "type": "string",
                  "nullable": true
                }
              }
            },
            "example": {
              "1": {
                "questionId": 1,
                "questionText": "How confident are you?",
                "questionOptions": [
                  "Not confident",
                  "Somewhat confident",
                  "Very confident"
                ],
                "totalResponses": 25,
                "answerCounts": {
                  "Not confident": 5,
                  "Somewhat confident": 12,
                  "Very confident": 8
                },
                "percentages": {
                  "Not confident": 20.0,
                  "Somewhat confident": 48.0,
                  "Very confident": 32.0
                },
                "totalAnswers": 25,
                "uniqueAnswers": 3,
                "mostCommonAnswer": "Somewhat confident"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme. Example: 'Bearer {token}'"
      }
    },
    "parameters": {
      "swaggerBypass": {
        "name": "x-swagger-bypass",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "default": "true"
        },
        "description": "🔓 Development bypass for authentication (set to 'true' to skip token verification)"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "string",
                  "example": "Access denied. No token provided."
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Invalid request data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Missing required fields"
                },
                "error": {
                  "type": "string",
                  "example": "Validation failed"
                }
              }
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Resource not found"
                }
              }
            }
          }
        }
      },
      "ServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "error": {
                  "type": "string",
                  "example": "Database connection failed"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  }
                },
                "required": [
                  "name",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "Categories list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Health"
                  },
                  "description": {
                    "type": "string",
                    "example": "Category description"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Category"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated description"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/enrolls": {
      "get": {
        "tags": [
          "Enrolls"
        ],
        "summary": "Get all enrolls",
        "responses": {
          "200": {
            "description": "Enrolls list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Enrolls"
        ],
        "summary": "Create enroll",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "program_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "user_id": {
                    "type": "integer",
                    "example": 5
                  }
                },
                "required": [
                  "program_id",
                  "user_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Enroll created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/enrolls/{id}": {
      "get": {
        "tags": [
          "Enrolls"
        ],
        "summary": "Get enroll by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enroll details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Enrolls"
        ],
        "summary": "Update enroll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "program_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "status": {
                    "type": "string",
                    "example": "completed"
                  }
                },
                "required": [
                  "program_id",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enroll updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Enrolls"
        ],
        "summary": "Delete enroll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enroll deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/surveys": {
      "get": {
        "tags": [
          "Surveys"
        ],
        "summary": "Get all surveys",
        "responses": {
          "200": {
            "description": "Surveys list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Surveys"
        ],
        "summary": "Create survey",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "program_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "pre-assessment",
                      "post-assessment"
                    ],
                    "example": "pre-assessment"
                  },
                  "questions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "question": {
                          "type": "string",
                          "example": "How confident are you?"
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Not confident",
                            "Somewhat confident",
                            "Very confident"
                          ]
                        }
                      },
                      "required": [
                        "question",
                        "options"
                      ]
                    }
                  }
                },
                "required": [
                  "program_id",
                  "type",
                  "questions"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Survey created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/surveys/{id}": {
      "get": {
        "tags": [
          "Surveys"
        ],
        "summary": "Get survey by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Survey details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Surveys"
        ],
        "summary": "Update survey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "program_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "pre-assessment",
                      "post-assessment"
                    ],
                    "example": "pre-assessment"
                  },
                  "questions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "question": {
                          "type": "string",
                          "example": "Updated question text"
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Option 1",
                            "Option 2",
                            "Option 3"
                          ]
                        }
                      },
                      "required": [
                        "question",
                        "options"
                      ]
                    }
                  }
                },
                "required": [
                  "program_id",
                  "type",
                  "questions"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Survey updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Surveys"
        ],
        "summary": "Delete survey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Survey deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/survey-responses": {
      "get": {
        "tags": [
          "Survey Responses"
        ],
        "summary": "Get all survey responses (Admin/Staff only)",
        "responses": {
          "200": {
            "description": "Survey responses retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Survey Responses"
        ],
        "summary": "Submit survey response",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "survey_id": {
                    "type": "integer",
                    "example": 1,
                    "description": "ID of the survey being responded to"
                  },
                  "responses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1,
                          "description": "Question ID"
                        },
                        "answer": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          ],
                          "example": "Very confident",
                          "description": "Answer value (string for single choice, array for multiple choice)"
                        }
                      },
                      "required": [
                        "id",
                        "answer"
                      ]
                    }
                  }
                },
                "required": [
                  "survey_id",
                  "responses"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Survey response submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "description": "Survey not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Survey not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/survey-responses/{id}": {
      "get": {
        "tags": [
          "Survey Responses"
        ],
        "summary": "Get survey response by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Survey response ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Survey response retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Survey Responses"
        ],
        "summary": "Update survey response by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Survey response ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "responses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "answer": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "answer"
                      ]
                    }
                  }
                },
                "required": [
                  "responses"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Survey response updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Survey Responses"
        ],
        "summary": "Delete survey response",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Survey response deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/blogs": {
      "get": {
        "tags": [
          "Blogs"
        ],
        "summary": "Get all blogs",
        "responses": {
          "200": {
            "description": "Blogs list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Blogs"
        ],
        "summary": "Create blog",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Blog Title"
                  },
                  "content": {
                    "type": "string",
                    "example": "Blog content goes here..."
                  },
                  "author": {
                    "type": "string",
                    "example": "Author Name"
                  }
                },
                "required": [
                  "title",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Blog created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/blogs/{id}": {
      "get": {
        "tags": [
          "Blogs"
        ],
        "summary": "Get blog by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Blogs"
        ],
        "summary": "Update blog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated Blog Title"
                  },
                  "content": {
                    "type": "string",
                    "example": "Updated blog content..."
                  },
                  "author": {
                    "type": "string",
                    "example": "Updated Author Name"
                  }
                },
                "required": [
                  "title",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Blog updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Blogs"
        ],
        "summary": "Delete blog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/contents": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Get all contents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contents"
        ],
        "summary": "Create content",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contents/{id}": {
      "get": {
        "tags": [
          "Contents"
        ],
        "summary": "Get content by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contents"
        ],
        "summary": "Update content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contents"
        ],
        "summary": "Delete content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/programs": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get all programs",
        "responses": {
          "200": {
            "description": "Programs list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin - Programs"
        ],
        "summary": "Create new program",
        "responses": {
          "201": {
            "description": "Program created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/swaggerBypass"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/programs/{id}": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get program details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Program details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin - Programs"
        ],
        "summary": "Update program",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/swaggerBypass"
          }
        ],
        "responses": {
          "200": {
            "description": "Program updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin - Programs"
        ],
        "summary": "Delete program",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/swaggerBypass"
          }
        ],
        "responses": {
          "200": {
            "description": "Program deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/booking-sessions": {
      "get": {
        "tags": [
          "BookingSessions"
        ],
        "summary": "Get all booking sessions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Booking"
        ],
        "summary": "Create new booking session",
        "responses": {
          "201": {
            "description": "Booking created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/swaggerBypass"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "consultant_id": {
                    "type": "integer"
                  },
                  "slot_id": {
                    "type": "integer"
                  },
                  "booking_date": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "consultant_id",
                  "slot_id",
                  "booking_date"
                ]
              }
            }
          }
        }
      }
    },
    "/api/booking-sessions/{id}": {
      "get": {
        "tags": [
          "BookingSessions"
        ],
        "summary": "Get booking session by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BookingSessions"
        ],
        "summary": "Update booking session",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BookingSessions"
        ],
        "summary": "Delete booking session",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/slots": {
      "get": {
        "tags": [
          "Slots"
        ],
        "summary": "Get all slots",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Slots"
        ],
        "summary": "Create slot",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/slots/{id}": {
      "get": {
        "tags": [
          "Slots"
        ],
        "summary": "Get slot by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Slots"
        ],
        "summary": "Update slot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Slots"
        ],
        "summary": "Delete slot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/flags": {
      "get": {
        "tags": [
          "Flags"
        ],
        "summary": "Get all flags",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Flags"
        ],
        "summary": "Create flag",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/flags/{id}": {
      "get": {
        "tags": [
          "Flags"
        ],
        "summary": "Get flag by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Flags"
        ],
        "summary": "Update flag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Flags"
        ],
        "summary": "Delete flag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consultant-slots": {
      "get": {
        "tags": [
          "ConsultantSlots"
        ],
        "summary": "Get all consultant slots",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ConsultantSlots"
        ],
        "summary": "Create consultant slot",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Booking"
        ],
        "summary": "Update consultant availability slots",
        "parameters": [
          {
            "$ref": "#/components/parameters/swaggerBypass"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "consultant_id": {
                    "type": "integer",
                    "description": "ID of the consultant"
                  },
                  "daysofweek": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "Single day of the week"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Array of days of the week"
                      }
                    ],
                    "description": "Day(s) of the week to update"
                  },
                  "slot": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Array of slot IDs to assign"
                  }
                },
                "required": [
                  "consultant_id",
                  "daysofweek",
                  "slot"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Consultant slots updated successfully"
          },
          "400": {
            "description": "Invalid input or slot IDs do not exist"
          },
          "404": {
            "description": "Consultant not found"
          }
        }
      }
    },
    "/api/consultant-slots/{id}": {
      "get": {
        "tags": [
          "ConsultantSlots"
        ],
        "summary": "Get consultant slot by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConsultantSlots"
        ],
        "summary": "Update consultant slot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConsultantSlots"
        ],
        "summary": "Delete consultant slot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/consultants": {
      "get": {
        "tags": [
          "Consultants"
        ],
        "summary": "Get all consultants",
        "responses": {
          "200": {
            "description": "Consultants list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin - Consultants"
        ],
        "summary": "Create new consultant",
        "responses": {
          "201": {
            "description": "Consultant created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/swaggerBypass"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/consultants/{id}": {
      "get": {
        "tags": [
          "Consultants"
        ],
        "summary": "Get consultant by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Consultants"
        ],
        "summary": "Update consultant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Consultants"
        ],
        "summary": "Delete consultant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/console-logs": {
      "get": {
        "tags": [
          "ConsoleLogs"
        ],
        "summary": "Get all console logs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ConsoleLogs"
        ],
        "summary": "Create console log",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/console-logs/{id}": {
      "get": {
        "tags": [
          "ConsoleLogs"
        ],
        "summary": "Get console log by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConsoleLogs"
        ],
        "summary": "Update console log",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConsoleLogs"
        ],
        "summary": "Delete console log",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments": {
      "get": {
        "tags": [
          "Admin - Assessments"
        ],
        "summary": "Get all assessments",
        "responses": {
          "tags": [
            "Assessments"
          ],
          "summary": "Create assessment",
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DefaultResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/assessments/{id}": {
        "get": {
          "tags": [
            "Assessments"
          ],
          "summary": "Get assessment by id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DefaultResponse"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Assessments"
          ],
          "summary": "Update assessment",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DefaultResponse"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Admin - Assessments"
          ],
          "summary": "Delete assessment",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "$ref": "#/components/parameters/swaggerBypass"
            }
          ],
          "responses": {
            "200": {
              "description": "Assessment deleted",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DefaultResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/api/actions": {
        "get": {
          "tags": [
            "Actions"
          ],
          "summary": "Get all actions",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DefaultResponse"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Actions"
          ],
          "summary": "Get console log by id",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DefaultResponse"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "ConsoleLogs"
          ],
          "summary": "Update console log",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DefaultResponse"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "ConsoleLogs"
          ],
          "summary": "Delete console log",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Deleted",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DefaultResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/assessments": {
        "get": {
          "tags": [
            "Admin - Assessments"
          ],
          "summary": "Get all assessments",
          "responses": {
            "tags": [
              "Assessments"
            ],
            "summary": "Create assessment",
            "responses": {
              "201": {
                "description": "Created",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/assessments/{id}": {
          "get": {
            "tags": [
              "Assessments"
            ],
            "summary": "Get assessment by id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "put": {
            "tags": [
              "Assessments"
            ],
            "summary": "Update assessment",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Updated",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "delete": {
            "tags": [
              "Admin - Assessments"
            ],
            "summary": "Delete assessment",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Assessment deleted",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            },
            "security": [
              {
                "bearerAuth": []
              }
            ]
          }
        },
        "/api/actions": {
          "get": {
            "tags": [
              "Actions"
            ],
            "summary": "Get all actions",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "post": {
            "tags": [
              "Actions"
            ],
            "summary": "Create action",
            "responses": {
              "201": {
                "description": "Created",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/actions/{id}": {
          "get": {
            "tags": [
              "Actions"
            ],
            "summary": "Get action by id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "put": {
            "tags": [
              "Actions"
            ],
            "summary": "Update action",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Updated",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "delete": {
            "tags": [
              "Actions"
            ],
            "summary": "Delete action",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Deleted",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/profiles": {
          "get": {
            "tags": [
              "Profiles"
            ],
            "summary": "Get all profiles",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "post": {
            "tags": [
              "Profiles"
            ],
            "summary": "Create profile",
            "responses": {
              "201": {
                "description": "Created",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/profiles/{id}": {
          "get": {
            "tags": [
              "Profiles"
            ],
            "summary": "Get profile by id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "put": {
            "tags": [
              "Profiles"
            ],
            "summary": "Update profile",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Updated",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "delete": {
            "tags": [
              "Profiles"
            ],
            "summary": "Delete profile",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Deleted",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/bookings": {
          "get": {
            "tags": [
              "Bookings"
            ],
            "summary": "Get all bookings",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "post": {
            "tags": [
              "Bookings"
            ],
            "summary": "Create booking",
            "responses": {
              "201": {
                "description": "Created",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/bookings/{id}": {
          "get": {
            "tags": [
              "Bookings"
            ],
            "summary": "Get booking by id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "put": {
            "tags": [
              "Bookings"
            ],
            "summary": "Update booking",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Updated",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "delete": {
            "tags": [
              "Bookings"
            ],
            "summary": "Delete booking",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Deleted",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/dashboard/stats": {
          "get": {
            "tags": [
              "Dashboard"
            ],
            "summary": "Lấy thống kê dashboard",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/dashboard/detailed": {
          "get": {
            "tags": [
              "Dashboard"
            ],
            "summary": "Get detailed dashboard statistics for admin",
            "responses": {
              "200": {
                "description": "Detailed dashboard stats retrieved",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/dashboard/monthly-enrollment": {
          "get": {
            "tags": [
              "Dashboard"
            ],
            "summary": "Lấy thống kê đăng ký hàng tháng",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/dashboard/monthly-members": {
          "get": {
            "tags": [
              "Dashboard"
            ],
            "summary": "Lấy thống kê thành viên mới hàng tháng",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/dashboard/active-members": {
          "get": {
            "tags": [
              "Dashboard"
            ],
            "summary": "Lấy thống kê thành viên hoạt động",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/dashboard/monthly-bookings": {
          "get": {
            "tags": [
              "Dashboard"
            ],
            "summary": "Lấy thống kê booking hàng tháng",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/dashboard/consultant": {
          "get": {
            "tags": [
              "Dashboard"
            ],
            "summary": "Lấy dashboard cho consultant",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/staff": {
          "get": {
            "tags": [
              "Admin - Staff"
            ],
            "summary": "Get all staff members",
            "responses": {
              "200": {
                "description": "Staff list retrieved",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            },
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ]
          },
          "post": {
            "tags": [
              "Admin - Staff"
            ],
            "summary": "Create new staff member",
            "responses": {
              "201": {
                "description": "Staff created",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            },
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ]
          }
        },
        "/api/staff/stats": {
          "get": {
            "tags": [
              "Staff"
            ],
            "summary": "Lấy thống kê staff",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/staff/search/{staffName}": {
          "get": {
            "tags": [
              "Staff"
            ],
            "summary": "Tìm staff theo tên",
            "parameters": [
              {
                "name": "staffName",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/staff/{staffId}": {
          "put": {
            "tags": [
              "Admin - Staff"
            ],
            "summary": "Update staff member",
            "parameters": [
              {
                "name": "staffId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Staff updated",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            },
            "security": [
              {
                "bearerAuth": []
              }
            ]
          },
          "delete": {
            "tags": [
              "Admin - Staff"
            ],
            "summary": "Delete staff member",
            "parameters": [
              {
                "name": "staffId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Staff deleted",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            },
            "security": [
              {
                "bearerAuth": []
              }
            ]
          }
        },
        "/api/members": {
          "get": {
            "tags": [
              "Admin - Members"
            ],
            "summary": "Get all members",
            "responses": {
              "200": {
                "description": "Members list retrieved",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            },
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ]
          },
          "post": {
            "tags": [
              "Member"
            ],
            "summary": "Tạo member",
            "responses": {
              "201": {
                "description": "Created",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/members/stats": {
          "get": {
            "tags": [
              "Member"
            ],
            "summary": "Lấy thống kê member",
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/members/search/{memberName}": {
          "get": {
            "tags": [
              "Admin - Members"
            ],
            "summary": "Search members by name",
            "parameters": [
              {
                "name": "memberName",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Member search results",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            },
            "security": [
              {
                "bearerAuth": []
              }
            ]
          }
        },
        "/api/members/{memberId}/full": {
          "get": {
            "tags": [
              "Member"
            ],
            "summary": "Lấy thông tin đầy đủ member",
            "parameters": [
              {
                "name": "memberId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "OK",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/members/{memberId}": {
          "get": {
            "tags": [
              "Admin - Members"
            ],
            "summary": "Get member details",
            "parameters": [
              {
                "name": "memberId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Member details retrieved",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            },
            "security": [
              {
                "bearerAuth": []
              }
            ]
          },
          "put": {
            "tags": [
              "Member"
            ],
            "summary": "Cập nhật member",
            "parameters": [
              {
                "name": "memberId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Updated",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          },
          "delete": {
            "tags": [
              "Admin - Members"
            ],
            "summary": "Delete member",
            "parameters": [
              {
                "name": "memberId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Member deleted",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            },
            "security": [
              {
                "bearerAuth": []
              }
            ]
          }
        },
        "/api/google/login": {
          "post": {
            "tags": [
              "GoogleAuth"
            ],
            "summary": "Đăng nhập bằng Google",
            "responses": {
              "200": {
                "description": "Đăng nhập thành công",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/google/register": {
          "post": {
            "tags": [
              "GoogleAuth"
            ],
            "summary": "Đăng ký bằng Google",
            "responses": {
              "201": {
                "description": "Đăng ký thành công",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/auth/login": {
          "post": {
            "tags": [
              "Auth"
            ],
            "summary": "Đăng nhập",
            "responses": {
              "200": {
                "description": "Đăng nhập thành công",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/auth/register": {
          "post": {
            "tags": [
              "Auth"
            ],
            "summary": "Đăng ký",
            "responses": {
              "201": {
                "description": "Đăng ký thành công",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/auth/google-login": {
          "post": {
            "tags": [
              "Auth"
            ],
            "summary": "Đăng nhập bằng Google",
            "responses": {
              "200": {
                "description": "Đăng nhập thành công",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/api/auth/google-register": {
          "post": {
            "tags": [
              "Auth"
            ],
            "summary": "Đăng ký bằng Google",
            "responses": {
              "201": {
                "description": "Đăng ký thành công",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DefaultResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "/": {
          "get": {
            "tags": [
              "Debug"
            ],
            "summary": "Get all users (Debug endpoint)",
            "description": "Debug endpoint to retrieve all users including passwords - no authentication required. WARNING: This endpoint exposes sensitive data and should only be used for debugging.",
            "responses": {
              "200": {
                "description": "Users retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "integer",
                                "example": 1
                              },
                              "email": {
                                "type": "string",
                                "example": "user@example.com"
                              },
                              "password": {
                                "type": "string",
                                "example": "hashedPassword123"
                              },
                              "role": {
                                "type": "string",
                                "example": "member"
                              },
                              "status": {
                                "type": "string",
                                "example": "active"
                              },
                              "img_link": {
                                "type": "string",
                                "nullable": true,
                                "example": "path/to/image.jpg"
                              }
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "example": "Users retrieved successfully (DEBUG MODE - includes passwords)"
                        }
                      }
                    }
                  }
                }
              },
              "500": {
                "description": "Server error",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to retrieve users"
                        },
                        "error": {
                          "type": "string",
                          "example": "Database connection error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/api/test-bypass": {
          "get": {
            "tags": [
              "Development Testing"
            ],
            "summary": "Test Swagger bypass functionality",
            "description": "This endpoint tests if the Swagger bypass is working. Add header 'x-swagger-bypass: true' to test without authentication.",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Bypass test successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "message": {
                          "type": "string",
                          "example": "🔓 Swagger bypass is working!"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": "integer",
                              "example": 1
                            },
                            "email": {
                              "type": "string",
                              "example": "swagger-test@example.com"
                            },
                            "role": {
                              "type": "string",
                              "example": "admin"
                            }
                          }
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-01-15T10:30:00.000Z"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "Unauthorized - Token required (unless bypass header is used)",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "error": {
                          "type": "string",
                          "example": "Access denied. No token provided."
                        },
                        "hint": {
                          "type": "string",
                          "example": "For Swagger testing, add header 'x-swagger-bypass: true'"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/api/login": {
          "post": {
            "tags": [
              "Authentication"
            ],
            "summary": "User login",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "user@example.com"
                      },
                      "password": {
                        "type": "string",
                        "example": "password123"
                      }
                    },
                    "required": [
                      "email",
                      "password"
                    ]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Login successful"
              },
              "401": {
                "description": "Invalid credentials"
              }
            }
          }
        },
        "/api/register": {
          "post": {
            "tags": [
              "Authentication"
            ],
            "summary": "User registration",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "member",
                          "consultant"
                        ]
                      }
                    },
                    "required": [
                      "email",
                      "password",
                      "role"
                    ]
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "User registered successfully"
              },
              "400": {
                "description": "Registration failed"
              }
            }
          }
        },
        "/api/google-login": {
          "post": {
            "tags": [
              "Authentication"
            ],
            "summary": "Google OAuth login",
            "responses": {
              "200": {
                "description": "Google login successful"
              }
            }
          }
        },
        "/api/google-register": {
          "post": {
            "tags": [
              "Authentication"
            ],
            "summary": "Google OAuth registration",
            "responses": {
              "201": {
                "description": "Google registration successful"
              }
            }
          }
        },
        "/api/dashboard": {
          "get": {
            "tags": [
              "Dashboard"
            ],
            "summary": "Get basic dashboard statistics",
            "responses": {
              "200": {
                "description": "Dashboard stats retrieved"
              }
            }
          }
        },
        "/api/profile": {
          "get": {
            "tags": [
              "Profile"
            ],
            "summary": "Get user profile",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Profile retrieved"
              },
              "401": {
                "description": "Unauthorized"
              }
            }
          },
          "post": {
            "tags": [
              "Profile"
            ],
            "summary": "Create user profile",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "job": {
                        "type": "string"
                      },
                      "dob": {
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "Profile created"
              }
            }
          }
        },
        "/api/profile/status": {
          "get": {
            "tags": [
              "Profile"
            ],
            "summary": "Check if user has profile",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Profile status checked"
              }
            }
          }
        },
        "/api/staff/{staffName}": {
          "get": {
            "tags": [
              "Admin - Staff"
            ],
            "summary": "Search staff by name",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "staffName",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Staff search results"
              }
            }
          }
        },
        "/api/consultants/search/{consultantName}": {
          "get": {
            "tags": [
              "Admin - Consultants"
            ],
            "summary": "Search consultants by name",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "consultantName",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Consultant search results"
              }
            }
          }
        },
        "/api/consultants/my-id": {
          "get": {
            "tags": [
              "Consultants"
            ],
            "summary": "Get consultant ID for authenticated user",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Consultant ID retrieved successfully"
              },
              "404": {
                "description": "Consultant not found for this user"
              }
            }
          }
        },
        "/api/consultants/{consultantId}": {
          "get": {
            "tags": [
              "Consultants"
            ],
            "summary": "Get consultant details",
            "parameters": [
              {
                "name": "consultantId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Consultant details retrieved"
              }
            }
          },
          "put": {
            "tags": [
              "Admin - Consultants"
            ],
            "summary": "Update consultant",
            "parameters": [
              {
                "name": "consultantId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Consultant updated"
              }
            }
          },
          "delete": {
            "tags": [
              "Admin - Consultants"
            ],
            "summary": "Delete consultant",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "consultantId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Consultant deleted"
              }
            }
          }
        },
        "/api/consultant-slots/{consultantId}": {
          "get": {
            "tags": [
              "Booking"
            ],
            "summary": "Get consultant available time slots",
            "parameters": [
              {
                "name": "consultantId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Available slots retrieved"
              }
            }
          }
        },
        "/api/booking-sessions/scheduled": {
          "get": {
            "tags": [
              "Booking"
            ],
            "summary": "Get user's scheduled booking sessions",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Scheduled sessions retrieved"
              }
            }
          }
        },
        "/api/booking-sessions/{bookingId}": {
          "put": {
            "tags": [
              "Booking"
            ],
            "summary": "Update booking session",
            "parameters": [
              {
                "name": "bookingId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "ID of the booking session to update"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "consultant_id": {
                        "type": "integer",
                        "description": "ID of the consultant (optional)"
                      },
                      "slot_id": {
                        "type": "integer",
                        "description": "ID of the time slot (optional)"
                      },
                      "booking_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Booking date in YYYY-MM-DD format (optional)"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "Đang chờ xác nhận",
                          "Đã xác nhận",
                          "Đã hoàn thành",
                          "Đã hủy",
                          "Đã từ chối"
                        ],
                        "description": "Booking status (optional)"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Additional notes for the booking (optional)"
                      },
                      "google_meet_link": {
                        "type": "string",
                        "description": "Google Meet link for the session (optional)"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Booking session updated successfully"
              },
              "400": {
                "description": "Invalid input data (consultant not found, slot not found, invalid date format, invalid status)"
              },
              "404": {
                "description": "Booking session not found"
              }
            }
          }
        },
        "/api/assessments/me": {
          "get": {
            "tags": [
              "Assessments"
            ],
            "summary": "Get current user's assessments",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "User assessments retrieved"
              }
            }
          }
        },
        "/api/assessments/details/{userId}": {
          "get": {
            "tags": [
              "Admin - Assessments"
            ],
            "summary": "Get assessment details for specific user",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "userId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Assessment details retrieved"
              }
            }
          }
        },
        "/api/assessments/type/{type}": {
          "get": {
            "tags": [
              "Admin - Assessments"
            ],
            "summary": "Get assessments by type",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "type",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Assessments by type retrieved"
              }
            }
          }
        },
        "/api/assessments/take-test": {
          "post": {
            "tags": [
              "Assessments"
            ],
            "summary": "Submit assessment test",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "answers": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "Assessment submitted"
              }
            }
          }
        },
        "/api/programs/my-enrollment-status": {
          "get": {
            "tags": [
              "Programs"
            ],
            "summary": "Get programs with user's enrollment status",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Programs with enrollment status retrieved"
              }
            }
          }
        },
        "/api/programs/search": {
          "get": {
            "tags": [
              "Programs"
            ],
            "summary": "Search programs",
            "parameters": [
              {
                "name": "q",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Search results retrieved"
              }
            }
          }
        },
        "/api/programs/category/{categoryId}": {
          "get": {
            "tags": [
              "Programs"
            ],
            "summary": "Get programs by category",
            "parameters": [
              {
                "name": "categoryId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Programs by category retrieved"
              }
            }
          }
        },
        "/api/content/{id}": {
          "get": {
            "tags": [
              "Content"
            ],
            "summary": "Get content by ID",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Content retrieved"
              }
            }
          }
        },
        "/api/content/file/{id}": {
          "get": {
            "tags": [
              "Content"
            ],
            "summary": "Get content file",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Content file retrieved"
              }
            }
          }
        },
        "/api/content/preview/{program_id}": {
          "get": {
            "tags": [
              "Content"
            ],
            "summary": "Get content preview for program",
            "parameters": [
              {
                "name": "program_id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Content preview retrieved"
              }
            }
          }
        },
        "/api/blogs/my": {
          "get": {
            "tags": [
              "Blogs"
            ],
            "summary": "Get current user's blogs",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "User blogs retrieved"
              }
            }
          }
        },
        "/api/blogs/with-image": {
          "post": {
            "tags": [
              "Blogs"
            ],
            "summary": "Create blog with image",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "content": {
                "multipart/form-data": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "body": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "Blog with image created"
              }
            }
          }
        },
        "/api/blogs/{id}/status": {
          "patch": {
            "tags": [
              "Blogs"
            ],
            "summary": "Update blog status",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "published",
                          "draft",
                          "hidden"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Blog status updated"
              }
            }
          }
        },
        "/api/enrollments/user/{userId}": {
          "get": {
            "tags": [
              "Enrollments"
            ],
            "summary": "Get enrollments by user ID",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "userId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "User enrollments retrieved"
              }
            }
          }
        },
        "/api/enrollments/check/{programId}": {
          "get": {
            "tags": [
              "Enrollments"
            ],
            "summary": "Check if user is enrolled in program",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "programId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Enrollment status checked"
              }
            }
          }
        },
        "/api/enrollments/{userId}/{programId}": {
          "get": {
            "tags": [
              "Enrollments"
            ],
            "summary": "Get specific enrollment",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "userId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "name": "programId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Enrollment details retrieved"
              }
            }
          }
        },
        "/api/enrollments": {
          "post": {
            "tags": [
              "Enrollments"
            ],
            "summary": "Create new enrollment",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "program_id": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "program_id"
                    ]
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "Enrollment created"
              }
            }
          }
        },
        "/api/enrollments/{enrollId}/content/{contentId}/toggle": {
          "patch": {
            "tags": [
              "Enrollments"
            ],
            "summary": "Toggle content completion status",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "enrollId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "contentId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Content completion toggled"
              }
            }
          }
        },
        "/api/enrollments/{enrollId}/complete": {
          "put": {
            "tags": [
              "Enrollments"
            ],
            "summary": "Mark enrollment as complete",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "enrollId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Enrollment marked as complete"
              }
            }
          }
        },
        "/api/programs/community-events": {
          "get": {
            "tags": [
              "Programs"
            ],
            "summary": "Get community event programs",
            "responses": {
              "200": {
                "description": "Community event programs retrieved"
              }
            }
          }
        },
        "/api/surveys/program/{programId}": {
          "get": {
            "tags": [
              "Surveys"
            ],
            "summary": "Get all surveys by program ID",
            "description": "Retrieve all surveys for a specific program. Only non-deleted questions are returned.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "programId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "Program ID"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Surveys by program retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Survey"
                          }
                        },
                        "dataByType": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/Survey"
                            }
                          },
                          "example": {
                            "pre-assessment": [],
                            "post-assessment": []
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 2
                        },
                        "message": {
                          "type": "string",
                          "example": "All surveys for program ID 1 retrieved successfully"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/ValidationError"
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/surveys/program/{programId}/type/{type}": {
          "get": {
            "tags": [
              "Surveys"
            ],
            "summary": "Get surveys by program ID and type",
            "description": "Retrieve surveys for a specific program and type. Only non-deleted questions are returned.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "programId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "Program ID"
              },
              {
                "name": "type",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "enum": [
                    "pre-assessment",
                    "post-assessment"
                  ]
                },
                "description": "Survey type"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Survey retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Survey"
                          },
                          "maxItems": 1,
                          "description": "Array containing only the first survey (enforces 1 per type/program)"
                        },
                        "count": {
                          "type": "integer",
                          "example": 1
                        },
                        "message": {
                          "type": "string",
                          "example": "Survey of type 'pre-assessment' for program ID 1 retrieved successfully"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/ValidationError"
              },
              "404": {
                "description": "No survey found for the specified program and type",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "No survey of type 'pre-assessment' found for program ID 1"
                        },
                        "data": {
                          "type": "array",
                          "example": []
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/me": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Get current user's survey responses",
            "description": "Retrieve all survey responses for the authenticated user in key-value format.",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "User survey responses retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SurveyResponseKeyValue"
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 3
                        },
                        "message": {
                          "type": "string",
                          "example": "User survey responses retrieved successfully"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/check/{surveyId}": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Check if current user has responded to a survey",
            "description": "Check if the authenticated user has already submitted a response for a specific survey.",
            "parameters": [
              {
                "name": "surveyId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "Survey ID to check"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Response check completed",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasResponded": {
                          "type": "boolean",
                          "example": true
                        },
                        "responseId": {
                          "type": "integer",
                          "nullable": true,
                          "example": 123
                        },
                        "surveyId": {
                          "type": "integer",
                          "example": 1
                        },
                        "userId": {
                          "type": "integer",
                          "example": 5
                        },
                        "submittedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2024-01-15T10:30:00.000Z"
                        },
                        "message": {
                          "type": "string",
                          "example": "You have already responded to this survey"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/ValidationError"
              },
              "404": {
                "description": "Survey not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Survey not found"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/statistics": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Get survey response statistics by program ID and type",
            "description": "Get comprehensive statistics for survey responses, including answer counts and percentages. Only processes statistics for non-deleted questions.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "parameters": [
              {
                "name": "programId",
                "in": "query",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "Program ID to filter surveys"
              },
              {
                "name": "type",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "pre-assessment",
                    "post-assessment"
                  ]
                },
                "description": "Survey type filter (e.g., pre-assessment, post-assessment)"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "responses": {
              "200": {
                "description": "Survey response statistics retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SurveyStatistics"
                          }
                        },
                        "message": {
                          "type": "string",
                          "example": "Survey response statistics generated successfully"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/ValidationError"
              },
              "404": {
                "description": "No surveys found for the specified program",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "No surveys found for the specified program"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/date-range": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Get survey responses by date range",
            "description": "Retrieve survey responses within a specified date range (Admin/Staff only).",
            "parameters": [
              {
                "name": "startDate",
                "in": "query",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "date"
                },
                "description": "Start date (YYYY-MM-DD format)"
              },
              {
                "name": "endDate",
                "in": "query",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "date"
                },
                "description": "End date (YYYY-MM-DD format)"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Survey responses retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SurveyResponse"
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 15
                        },
                        "dateRange": {
                          "type": "object",
                          "properties": {
                            "startDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "example": "Survey responses retrieved successfully"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/ValidationError"
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/{id}/parsed": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Get parsed survey response by ID",
            "description": "Retrieve a specific survey response with parsed answer data (Admin/Staff only).",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "Survey response ID"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Parsed survey response retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "response_id": {
                              "type": "integer"
                            },
                            "survey_id": {
                              "type": "integer"
                            },
                            "user_id": {
                              "type": "integer"
                            },
                            "parsed_answers": {
                              "type": "object",
                              "description": "Parsed JSON answers"
                            },
                            "submitted_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "example": "Parsed survey response retrieved successfully"
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "$ref": "#/components/responses/NotFoundError"
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/{id}/with-relations": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Get survey response with user and survey info",
            "description": "Retrieve a survey response with related user and survey information (Admin/Staff only).",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "Survey response ID"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Survey response with relations retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "response": {
                              "$ref": "#/components/schemas/SurveyResponse"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "user_id": {
                                  "type": "integer"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string"
                                }
                              }
                            },
                            "survey": {
                              "$ref": "#/components/schemas/Survey"
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "example": "Survey response with relations retrieved successfully"
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "$ref": "#/components/responses/NotFoundError"
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/survey/{surveyId}": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Get responses by survey ID",
            "description": "Retrieve all responses for a specific survey (Admin/Staff only).",
            "parameters": [
              {
                "name": "surveyId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "Survey ID"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Survey responses retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SurveyResponse"
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 25
                        },
                        "surveyId": {
                          "type": "integer",
                          "example": 1
                        },
                        "message": {
                          "type": "string",
                          "example": "Survey responses retrieved successfully"
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "$ref": "#/components/responses/NotFoundError"
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/user/{userId}": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Get responses by user ID",
            "description": "Retrieve all responses for a specific user (Admin/Staff only).",
            "parameters": [
              {
                "name": "userId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "User ID"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "User survey responses retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SurveyResponse"
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 5
                        },
                        "userId": {
                          "type": "integer",
                          "example": 5
                        },
                        "message": {
                          "type": "string",
                          "example": "User survey responses retrieved successfully"
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "$ref": "#/components/responses/NotFoundError"
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/survey/{surveyId}/analytics": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Get survey analytics",
            "description": "Get detailed analytics for a specific survey, including response patterns and statistics. Only processes analytics for non-deleted questions.",
            "parameters": [
              {
                "name": "surveyId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "Survey ID"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Survey analytics retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "surveyId": {
                              "type": "integer",
                              "example": 1
                            },
                            "totalResponses": {
                              "type": "integer",
                              "example": 50
                            },
                            "responseRate": {
                              "type": "number",
                              "example": 75.5
                            },
                            "completionRate": {
                              "type": "number",
                              "example": 95.2
                            },
                            "questionAnalytics": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "questionId": {
                                    "type": "integer"
                                  },
                                  "questionText": {
                                    "type": "string"
                                  },
                                  "responseCount": {
                                    "type": "integer"
                                  },
                                  "answerDistribution": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "integer"
                                    }
                                  },
                                  "percentageDistribution": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "message": {
                          "type": "string",
                          "example": "Survey analytics retrieved successfully"
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "$ref": "#/components/responses/NotFoundError"
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/check/{surveyId}/{userId}": {
          "get": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Check if specific user has responded to a survey",
            "description": "Check if a specific user has already submitted a response for a specific survey (Admin/Staff only).",
            "parameters": [
              {
                "name": "surveyId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "Survey ID"
              },
              {
                "name": "userId",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "description": "User ID"
              },
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "User response check completed",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasResponded": {
                          "type": "boolean",
                          "example": true
                        },
                        "responseId": {
                          "type": "integer",
                          "nullable": true,
                          "example": 123
                        },
                        "surveyId": {
                          "type": "integer",
                          "example": 1
                        },
                        "userId": {
                          "type": "integer",
                          "example": 5
                        },
                        "submittedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2024-01-15T10:30:00.000Z"
                        },
                        "message": {
                          "type": "string",
                          "example": "User has responded to this survey"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/ValidationError"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundError"
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        },
        "/api/survey-responses/legacy": {
          "post": {
            "tags": [
              "Survey Responses"
            ],
            "summary": "Submit survey response (Legacy format)",
            "description": "Submit a new survey response using legacy format (Admin/Staff only).",
            "parameters": [
              {
                "$ref": "#/components/parameters/swaggerBypass"
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "survey_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 5
                      },
                      "answer_json": {
                        "type": "string",
                        "description": "JSON string containing the response data"
                      }
                    },
                    "required": [
                      "survey_id",
                      "answer_json"
                    ]
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "Survey response submitted successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "data": {
                          "$ref": "#/components/schemas/SurveyResponse"
                        },
                        "message": {
                          "type": "string",
                          "example": "Survey response submitted successfully"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/ValidationError"
              },
              "404": {
                "$ref": "#/components/responses/NotFoundError"
              },
              "409": {
                "description": "User has already responded to this survey",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "User has already responded to this survey"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "$ref": "#/components/responses/UnauthorizedError"
              },
              "500": {
                "$ref": "#/components/responses/ServerError"
              }
            }
          }
        }
      }
    }
  }
}