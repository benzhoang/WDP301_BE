{
  "openapi": "3.0.3",
  "info": {
    "title": "User Authentication & Management API",
    "description": "API for user registration, login, profile management and soft delete.",
    "version": "1.0.0"
  },
  "servers": [],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and registration"
    },
    {
      "name": "Users",
      "description": "User management and profile"
    },
    {
      "name": "Category",
      "description": "Category"
    }
  ],
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Missing email or password"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "403": {
            "description": "Account is not active"
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Missing fields"
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },
    "/api/google-login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Google login (not implemented)",
        "responses": {
          "200": {
            "description": "Google Login chưa được triển khai."
          }
        }
      }
    },
    "/api/google-register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Google register (not implemented)",
        "responses": {
          "200": {
            "description": "Google Register chưa được triển khai."
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users (without passwords)",
        "responses": {
          "200": {
            "description": "List of users"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create new user (admin only)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "role",
                  "status"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive",
                      "banned"
                    ]
                  },
                  "img_link": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Missing required fields"
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive",
                      "banned"
                    ]
                  },
                  "img_link": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Soft delete user (set status = inactive)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deactivated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/user/profile-combined": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get authenticated user's profile + account info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile and info"
          },
          "400": {
            "description": "Missing user ID from token"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update authenticated user's account and profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "img_link": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "bio_json": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string"
                  },
                  "job": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User and profile updated"
          }
        }
      }
    },
    "/api/user/delete-account": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Soft delete (deactivate) authenticated user account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deactivated successfully"
          },
          "400": {
            "description": "Already deactivated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/user/role/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user's role from token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved"
          },
          "404": {
            "description": "Role not found"
          }
        }
      }
    },
    "/api/categories/": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/api/categories/{id}": {
      "put": {
        "tags": [
          "Category"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted"
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/consultants": {
      "get": {
        "summary": "Lấy danh sách tất cả tư vấn viên",
        "tags": [
          "Consultants"
        ],
        "responses": {
          "200": {
            "description": "Danh sách tư vấn viên",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Consultant"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Tạo mới tư vấn viên",
        "tags": [
          "Consultants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultantInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tư vấn viên được tạo thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consultant"
                }
              }
            }
          }
        }
      }
    },
    "/api/consultants/{id}": {
      "get": {
        "summary": "Lấy tư vấn viên theo ID",
        "tags": [
          "Consultants"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chi tiết tư vấn viên",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consultant"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy tư vấn viên"
          }
        }
      },
      "put": {
        "summary": "Cập nhật thông tin tư vấn viên",
        "tags": [
          "Consultants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultantInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tư vấn viên được cập nhật thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consultant"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy tư vấn viên"
          }
        }
      },
      "delete": {
        "summary": "Xóa tư vấn viên theo ID",
        "tags": [
          "Consultants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tư vấn viên đã bị xóa"
          },
          "404": {
            "description": "Không tìm thấy tư vấn viên"
          }
        }
      }
    },
    "/api/consultants/search": {
      "get": {
        "summary": "Tìm kiếm tư vấn viên theo tên",
        "tags": [
          "Consultants"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách tư vấn viên tìm được",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Consultant"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/consultants/email/{email}": {
      "get": {
        "summary": "Lấy tư vấn viên theo email",
        "tags": [
          "Consultants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tư vấn viên với email được chỉ định",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consultant"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy tư vấn viên"
          }
        }
      }
    },
    "/api/consultants/by-user/{userId}": {
      "get": {
        "summary": "Lấy tư vấn viên theo ID người dùng",
        "tags": [
          "Consultants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tư vấn viên với user ID được chỉ định",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consultant"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy tư vấn viên"
          }
        }
      }
    },
    "/api/consultant-slots/{id}": {
      "get": {
        "summary": "Lấy tất cả slot theo consultant ID",
        "tags": [
          "ConsultantSlot"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách các slot",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConsultantSlot"
                      }
                    },
                    "count": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/consultant-slots/bulk/{consultantId}": {
      "post": {
        "summary": "Tạo nhiều slot cho consultant",
        "tags": [
          "ConsultantSlot"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "consultantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "slots": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "day_of_week": {
                          "type": "string"
                        },
                        "start_time": {
                          "type": "string"
                        },
                        "end_time": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "day_of_week",
                        "start_time",
                        "end_time"
                      ]
                    }
                  }
                },
                "required": [
                  "slots"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo slots thành công"
          },
          "409": {
            "description": "Slot trùng lặp"
          }
        }
      }
    },
    "/api/consultant-slots/update": {
      "put": {
        "summary": "Cập nhật slot theo ngày cho consultant",
        "tags": [
          "ConsultantSlot"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "consultant_id": {
                    "type": "string"
                  },
                  "daysofweek": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  },
                  "slot": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "start_time": {
                          "type": "string"
                        },
                        "end_time": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "start_time",
                        "end_time"
                      ]
                    }
                  }
                },
                "required": [
                  "consultant_id",
                  "daysofweek",
                  "slot"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật slot thành công"
          },
          "409": {
            "description": "Slot trùng lặp"
          }
        }
      }
    },
    "/api/consultant-slots/consultant/{consultantId}": {
      "delete": {
        "summary": "Xóa toàn bộ slot theo consultant ID",
        "tags": [
          "ConsultantSlot"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "consultantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công các slot"
          }
        }
      }
    },
    "/api/booking-sessions": {
      "get": {
        "tags": [
          "BookingSession"
        ],
        "summary": "Lấy tất cả lịch hẹn",
        "responses": {
          "200": {
            "description": "Danh sách lịch hẹn"
          }
        }
      },
      "post": {
        "tags": [
          "BookingSession"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Tạo lịch hẹn mới",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingSessionInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo lịch hẹn thành công"
          }
        }
      }
    },
    "/api/booking-sessions/member": {
      "get": {
        "tags": [
          "BookingSession"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Lấy lịch hẹn của thành viên hiện tại",
        "responses": {
          "200": {
            "description": "Danh sách lịch hẹn theo thành viên"
          }
        }
      }
    },
    "/api/booking-sessions/scheduled": {
      "get": {
        "tags": [
          "BookingSession"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Lấy lịch hẹn đã lên lịch (đang chờ xác nhận hoặc xác nhận thành công)",
        "responses": {
          "200": {
            "description": "Danh sách lịch hẹn đã lên lịch"
          }
        }
      }
    },
    "/api/booking-sessions/consultant/{consultantId}": {
      "get": {
        "tags": [
          "BookingSession"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Lấy lịch hẹn theo tư vấn viên",
        "parameters": [
          {
            "name": "consultantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách lịch hẹn theo tư vấn viên"
          }
        }
      }
    },
    "/api/booking-sessions/{bookingId}": {
      "put": {
        "tags": [
          "BookingSession"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Cập nhật thông tin lịch hẹn",
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingSessionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công"
          }
        }
      }
    },
    "/api/booking-sessions/{id}": {
      "delete": {
        "tags": [
          "BookingSession"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Xóa lịch hẹn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công"
          }
        }
      }
    },
    "/api/booking-sessions/{id}/status-link": {
      "put": {
        "tags": [
          "BookingSession"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Cập nhật trạng thái và link Google Meet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingSessionStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật trạng thái/link thành công"
          }
        }
      }
    },
    "/api/blogs": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Lấy tất cả blog",
        "responses": {
          "200": {
            "description": "Danh sách blog"
          }
        }
      },
      "post": {
        "tags": [
          "Blog"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Tạo blog mới",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Blog đã được tạo"
          }
        }
      }
    },
    "/api/blogs/with-image": {
      "post": {
        "tags": [
          "Blog"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Tạo blog kèm ảnh (chưa triển khai)",
        "responses": {
          "200": {
            "description": "Chưa triển khai upload ảnh thực tế"
          }
        }
      }
    },
    "/api/blogs/author/{authorId}": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Lấy blog theo tác giả",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách blog theo tác giả"
          }
        }
      }
    },
    "/api/blogs/status/{status}": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Lấy blog theo trạng thái",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách blog theo trạng thái"
          }
        }
      }
    },
    "/api/blogs/my": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Lấy blog của chính mình",
        "responses": {
          "200": {
            "description": "Danh sách blog của chính bạn"
          }
        }
      }
    },
    "/api/blogs/pending": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Lấy blog đang chờ duyệt",
        "responses": {
          "200": {
            "description": "Danh sách blog pending"
          }
        }
      }
    },
    "/api/blogs/admin/blogs": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Lấy tất cả blog cho admin",
        "responses": {
          "200": {
            "description": "Danh sách blog cho admin"
          }
        }
      }
    },
    "/api/blogs/moderation/stats": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Thống kê kiểm duyệt blog",
        "responses": {
          "200": {
            "description": "Thống kê moderation blog"
          }
        }
      }
    },
    "/api/blogs/{id}": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Lấy blog theo ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chi tiết blog"
          }
        }
      },
      "put": {
        "tags": [
          "Blog"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Cập nhật blog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công"
          }
        }
      },
      "delete": {
        "tags": [
          "Blog"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Xóa blog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công"
          }
        }
      }
    },
    "/api/blogs/{id}/status": {
      "patch": {
        "tags": [
          "Blog"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Cập nhật trạng thái blog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật trạng thái thành công"
          }
        }
      }
    },
    "/api/blogs/{id}/approve": {
      "patch": {
        "tags": [
          "Blog"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Duyệt blog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Duyệt blog thành công"
          }
        }
      }
    },
    "/api/blogs/{id}/reject": {
      "patch": {
        "tags": [
          "Blog"
        ],
        "summary": "Từ chối blog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rejectionReason": {
                    "type": "string",
                    "minLength": 10
                  }
                },
                "required": [
                  "rejectionReason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Từ chối blog thành công"
          }
        }
      }
    },
    "/api/actions": {
      "get": {
        "summary": "Lấy tất cả actions",
        "tags": [
          "Action"
        ],
        "responses": {
          "200": {
            "description": "Danh sách actions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Action"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Tạo mới action",
        "tags": [
          "Action"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "range": {
                    "type": "integer"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Action được tạo thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "/api/actions": {
            "get": {
              "summary": "Lấy tất cả actions",
              "tags": [
                "Action"
              ],
              "responses": {
                "200": {
                  "description": "Danh sách actions",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "data": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/Action"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "post": {
              "summary": "Tạo mới action",
              "tags": [
                "Action"
              ],
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "range": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                }
              },
              "responses": {
                "201": {
                  "description": "Action được tạo thành công",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Action"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/actions/{id}": {
      "get": {
        "summary": "Lấy action theo ID",
        "tags": [
          "Action"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Action được tìm thấy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy action"
          }
        }
      },
      "put": {
        "summary": "Cập nhật action theo ID",
        "tags": [
          "Action"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "range": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Xoá action theo ID",
        "tags": [
          "Action"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xoá thành công"
          },
          "404": {
            "description": "Không tìm thấy"
          }
        }
      }
    },
    "/api/actions/type/{type}": {
      "get": {
        "summary": "Lấy actions theo loại",
        "tags": [
          "Action"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách actions theo type"
          }
        }
      }
    },
    "/api/actions/range": {
      "get": {
        "summary": "Lấy actions theo khoảng range",
        "tags": [
          "Action"
        ],
        "parameters": [
          {
            "name": "minRange",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "maxRange",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách actions theo khoảng range"
          }
        }
      }
    },
    "/api/programs": {
      "get": {
        "summary": "Get all programs",
        "tags": [
          "Program"
        ],
        "responses": {
          "200": {
            "description": "List of programs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramArray"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new program",
        "tags": [
          "Program"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Program created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/{id}": {
      "get": {
        "summary": "Get program by ID",
        "tags": [
          "Program"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Program details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update program by ID",
        "tags": [
          "Program"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Program updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete program by ID",
        "tags": [
          "Program"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Program deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/category/{categoryId}": {
      "get": {
        "summary": "Get programs by category",
        "tags": [
          "Program"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Programs in category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramArray"
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/creator/{creatorId}": {
      "get": {
        "summary": "Get programs by creator",
        "tags": [
          "Program"
        ],
        "parameters": [
          {
            "name": "creatorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Programs by creator",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramArray"
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/category-details": {
      "get": {
        "summary": "Get all programs with category details grouped",
        "tags": [
          "Program"
        ],
        "responses": {
          "200": {
            "description": "Programs grouped by category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "$ref": "#/components/schemas/Category"
                      },
                      "programs": {
                        "$ref": "#/components/schemas/ProgramArray"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/community-events": {
      "get": {
        "summary": "Get community event programs",
        "tags": [
          "Program"
        ],
        "responses": {
          "200": {
            "description": "Community event programs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramArray"
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/my-enrollment-status": {
      "get": {
        "summary": "Get user programs with enrollment status",
        "tags": [
          "Program"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Programs with enrollment status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Program"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "is_enrolled": {
                            "type": "boolean"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/recommendations": {
      "get": {
        "summary": "Get program recommendations by user age",
        "tags": [
          "Program"
        ],
        "responses": {
          "200": {
            "description": "Recommended programs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramArray"
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/{programId}/survey-analytics": {
      "get": {
        "summary": "Get survey analytics for program",
        "tags": [
          "Program"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Survey analytics details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyAnalytics"
                }
              }
            }
          }
        }
      }
    },
    "/api/quizzes/{quizId}/check": {
      "get": {
        "summary": "Check if user can take a quiz",
        "tags": [
          "Quiz"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the quiz to check"
          }
        ],
        "responses": {
          "200": {
            "description": "User can take the quiz",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CanTakeQuizResponse"
                }
              }
            }
          },
          "403": {
            "description": "User not enrolled or hasn't completed all contents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Quiz not found or not associated with a program",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/quizzes/{quizId}/submit": {
      "post": {
        "summary": "Submit quiz answers",
        "tags": [
          "Quiz"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the quiz to submit"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuizSubmissionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Quiz submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizSubmissionResponse"
                }
              }
            }
          },
          "403": {
            "description": "User not enrolled or hasn't completed all contents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/{programId}/quiz": {
      "get": {
        "summary": "Get quiz by program without answers",
        "tags": [
          "Quiz"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the program"
          }
        ],
        "responses": {
          "200": {
            "description": "Quiz details without correct answers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizResponseWithoutAnswers"
                }
              }
            }
          },
          "404": {
            "description": "Program or quiz not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/programs/{programId}/quiz/answers": {
      "get": {
        "summary": "Get quiz by program with answers",
        "tags": [
          "Quiz"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the program"
          }
        ],
        "responses": {
          "200": {
            "description": "Quiz details with correct answers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizResponseWithAnswers"
                }
              }
            }
          },
          "404": {
            "description": "Program or quiz not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/quizzes": {
      "post": {
        "summary": "Create a new quiz",
        "tags": [
          "Quiz"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuizRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Quiz created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateQuizResponse"
                }
              }
            }
          },
          "404": {
            "description": "Program not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/quizzes/{id}": {
      "put": {
        "summary": "Update an existing quiz",
        "tags": [
          "Quiz"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the quiz to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuizRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Quiz updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateQuizResponse"
                }
              }
            }
          },
          "404": {
            "description": "Quiz not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/quizzes/programs/{programId}/result": {
      "get": {
        "summary": "Get student result for a program",
        "tags": [
          "Student Result"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the program"
          }
        ],
        "responses": {
          "200": {
            "description": "Student result retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Program or enrollment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/quizzes/programs/{programId}/result/detailed": {
      "get": {
        "summary": "Get detailed student result for a program",
        "tags": [
          "Student Result"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the program"
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed student result retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedStudentResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Program or enrollment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/content": {
      "get": {
        "summary": "Get all contents",
        "tags": [
          "Content"
        ],
        "responses": {
          "200": {
            "description": "List of all contents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new content",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Content created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Program not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/program/{programId}": {
      "get": {
        "summary": "Get contents by program ID",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the program"
          }
        ],
        "responses": {
          "200": {
            "description": "List of contents for the program",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/type/{type}": {
      "get": {
        "summary": "Get contents by type",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "video",
                "text",
                "quiz",
                "assignment",
                "file",
                "link"
              ]
            },
            "description": "Type of content"
          }
        ],
        "responses": {
          "200": {
            "description": "List of contents by type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/content-type/{contentType}": {
      "get": {
        "summary": "Get contents by content type",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "contentType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Content type"
          }
        ],
        "responses": {
          "200": {
            "description": "List of contents by content type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/{id}": {
      "get": {
        "summary": "Get content by ID",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the content"
          }
        ],
        "responses": {
          "200": {
            "description": "Content details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a content",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the content to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a content",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the content to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Content deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContentResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/{id}/with-program": {
      "get": {
        "summary": "Get content by ID with program details",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the content"
          }
        ],
        "responses": {
          "200": {
            "description": "Content details with program",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentWithProgramResponse"
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/{id}/parsed-metadata": {
      "get": {
        "summary": "Get content by ID with parsed metadata",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the content"
          }
        ],
        "responses": {
          "200": {
            "description": "Content details with parsed metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedMetadataResponse"
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/file/{id}": {
      "get": {
        "summary": "Get content file",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the content"
          }
        ],
        "responses": {
          "200": {
            "description": "Placeholder response for content file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/youtube": {
      "post": {
        "summary": "Create YouTube content",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Placeholder response for YouTube content creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/markdown": {
      "post": {
        "summary": "Create Markdown content",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Placeholder response for Markdown content creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/podcast": {
      "post": {
        "summary": "Create Podcast content",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Placeholder response for Podcast content creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/{id}/order": {
      "patch": {
        "summary": "Update content order",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the content"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order": {
                    "type": "number"
                  }
                },
                "required": [
                  "order"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/images/upload": {
      "post": {
        "summary": "Upload image for content",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Placeholder response for image upload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/images/{filename}": {
      "get": {
        "summary": "Get image for content",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Filename of the image"
          }
        ],
        "responses": {
          "200": {
            "description": "Placeholder response for image retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/preview/{program_id}": {
      "get": {
        "summary": "Get preview of contents for a program",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "program_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the program"
          }
        ],
        "responses": {
          "200": {
            "description": "Preview of contents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Program ID is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/slots": {
      "get": {
        "summary": "Get all slots",
        "tags": [
          "Slot"
        ],
        "responses": {
          "200": {
            "description": "List of all slots",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new slot",
        "tags": [
          "Slot"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSlotRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Slot created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments": {
      "get": {
        "summary": "Get all enrollments",
        "tags": [
          "Enrollment"
        ],
        "responses": {
          "200": {
            "description": "List of all enrollments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new enrollment",
        "tags": [
          "Enrollment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnrollRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Enrollment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "User already enrolled in the program",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/user/{userId}": {
      "get": {
        "summary": "Get enrollments by user ID",
        "tags": [
          "Enrollment"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user enrollments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/check/{programId}": {
      "get": {
        "summary": "Check user's enrollment for a program",
        "tags": [
          "Enrollment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the program"
          }
        ],
        "responses": {
          "200": {
            "description": "User enrollments for the program",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Program ID is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/program/{programId}": {
      "get": {
        "summary": "Get enrollments by program ID",
        "tags": [
          "Enrollment"
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the program"
          }
        ],
        "responses": {
          "200": {
            "description": "List of enrollments for the program",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/{enrollId}": {
      "get": {
        "summary": "Get enrollment by ID",
        "tags": [
          "Enrollment"
        ],
        "parameters": [
          {
            "name": "enrollId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the enrollment"
          }
        ],
        "responses": {
          "200": {
            "description": "Enrollment details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollResponse"
                }
              }
            }
          },
          "404": {
            "description": "Enrollment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/{id}/complete": {
      "put": {
        "summary": "Mark enrollment as completed",
        "tags": [
          "Enrollment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the enrollment"
          }
        ],
        "responses": {
          "200": {
            "description": "Enrollment marked as completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollResponse"
                }
              }
            }
          },
          "404": {
            "description": "Enrollment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/{enrollId}/content/{contentId}/toggle": {
      "patch": {
        "summary": "Toggle content completion status in an enrollment",
        "tags": [
          "Enrollment"
        ],
        "parameters": [
          {
            "name": "enrollId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the enrollment"
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the content"
          }
        ],
        "responses": {
          "200": {
            "description": "Content completion toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollResponse"
                }
              }
            }
          },
          "404": {
            "description": "Enrollment or content not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/enrollments/my/{programId}": {
      "delete": {
        "summary": "Delete user's enrollment for a program",
        "tags": [
          "Enrollment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the program"
          }
        ],
        "responses": {
          "200": {
            "description": "Enrollment deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteEnrollResponse"
                }
              }
            }
          },
          "404": {
            "description": "Enrollment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments": {
      "get": {
        "summary": "Get all assessments",
        "tags": [
          "Assessment"
        ],
        "responses": {
          "200": {
            "description": "List of all assessments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new assessment",
        "tags": [
          "Assessment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssessmentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Assessment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments/user/{userId}": {
      "get": {
        "summary": "Get assessments by user ID",
        "tags": [
          "Assessment"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assessments for the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentsWithCountResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments/type/{type}": {
      "get": {
        "summary": "Get assessments by type",
        "tags": [
          "Assessment"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Type of assessment"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assessments by type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentsWithCountResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments/date-range": {
      "get": {
        "summary": "Get assessments by date range",
        "tags": [
          "Assessment"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Start date of the range"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "End date of the range"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assessments within the date range",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentsWithCountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Start date and end date are required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments/with-relations": {
      "get": {
        "summary": "Get assessments with related data",
        "tags": [
          "Assessment"
        ],
        "responses": {
          "200": {
            "description": "List of assessments with user relations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments/me": {
      "get": {
        "summary": "Get assessments for the authenticated user",
        "tags": [
          "Assessment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of assessments for the authenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentsWithCreateAtResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments/{id}": {
      "put": {
        "summary": "Update an assessment",
        "tags": [
          "Assessment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the assessment"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssessmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assessment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Assessment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an assessment",
        "tags": [
          "Assessment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the assessment"
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAssessmentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Assessment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments/submit": {
      "post": {
        "summary": "Submit a test for a user",
        "tags": [
          "Assessment"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitTestRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Assessment submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Only members can take tests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User or action not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessments/details/{userId}": {
      "get": {
        "summary": "Get assessment details for a user",
        "tags": [
          "Assessment"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment details for the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentsWithCountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Only member users can access assessment details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assessment-questions/type/{type}": {
      "get": {
        "summary": "Get assessment questions by type",
        "tags": [
          "AssessmentQuestion"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CRAFFT",
                "ASSIST"
              ]
            },
            "description": "Type of assessment (CRAFFT or ASSIST)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assessment questions for the specified type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssessmentQuestion"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No questions found for this type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Consultant": {
        "type": "object",
        "required": [
          "name",
          "email",
          "specialty",
          "phone"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Nguyen Van A"
          },
          "email": {
            "type": "string",
            "example": "vana@example.com"
          },
          "phone": {
            "type": "string",
            "example": "0909123456"
          },
          "specialty": {
            "type": "string",
            "example": "Mental Health"
          },
          "experience": {
            "type": "string",
            "example": "5 years"
          },
          "bio": {
            "type": "string",
            "example": "Expert in adolescent psychology"
          }
        }
      },
      "CategoryInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Electronics"
          },
          "description": {
            "type": "string",
            "example": "Gadgets and devices"
          }
        },
        "required": [
          "name"
        ]
      },
      "ConsultantCreate": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "ID người dùng"
          },
          "google_meet_link": {
            "type": "string",
            "example": "https://meet.google.com/abc-defg-hij"
          },
          "certification": {
            "type": "string",
            "example": "Chứng chỉ tâm lý học"
          },
          "speciality": {
            "type": "string",
            "example": "Tư vấn tâm lý thanh thiếu niên"
          }
        },
        "required": [
          "user",
          "google_meet_link",
          "certification",
          "speciality"
        ]
      },
      "ConsultantInput": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "ID người dùng"
          },
          "google_meet_link": {
            "type": "string",
            "example": "https://meet.google.com/abc-defg-hij"
          },
          "certification": {
            "type": "string",
            "example": "Chứng chỉ tâm lý học"
          },
          "speciality": {
            "type": "string",
            "example": "Tư vấn tâm lý thanh thiếu niên"
          }
        },
        "required": [
          "user",
          "google_meet_link",
          "certification",
          "speciality"
        ]
      },
      "ConsultantSlot": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "consultant_id": {
            "type": "string"
          },
          "slot_id": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "start_time": {
                "type": "string"
              },
              "end_time": {
                "type": "string"
              }
            }
          },
          "day_of_week": {
            "type": "string"
          },
          "start_time": {
            "type": "string"
          },
          "end_time": {
            "type": "string"
          }
        }
      },
      "BookingSessionInput": {
        "type": "object",
        "properties": {
          "consultant_id": {
            "type": "string",
            "description": "ID của tư vấn viên"
          },
          "slot_id": {
            "type": "string",
            "description": "ID của khung giờ"
          },
          "booking_date": {
            "type": "string",
            "format": "date",
            "description": "Ngày đặt lịch"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú thêm (tuỳ chọn)"
          }
        },
        "required": [
          "consultant_id",
          "slot_id",
          "booking_date"
        ]
      },
      "BookingSessionUpdate": {
        "type": "object",
        "properties": {
          "consultant_id": {
            "type": "string"
          },
          "slot_id": {
            "type": "string"
          },
          "booking_date": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "google_meet_link": {
            "type": "string"
          }
        }
      },
      "BookingSessionStatusUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "google_meet_link": {
            "type": "string"
          }
        }
      },
      "BlogInput": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "description": "ID người tạo blog"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "default": "draft"
          },
          "image": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "published_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "author",
          "title",
          "body"
        ]
      },
      "Action": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "range": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "_id": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Program": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "creator": {
            "type": "string"
          },
          "quiz_id": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProgramArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Program"
        }
      },
      "CreateProgramInput": {
        "type": "object",
        "required": [
          "name",
          "creator"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "creator": {
            "type": "string"
          },
          "quiz": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "duration": {
                "type": "number"
              },
              "questions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "contents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "video_url": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UpdateProgramInput": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateProgramInput"
          }
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SurveyAnalytics": {
        "type": "object",
        "properties": {
          "surveys": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "total_responses": {
                  "type": "integer"
                }
              }
            }
          },
          "total_surveys": {
            "type": "integer"
          },
          "total_responses": {
            "type": "integer"
          },
          "completion_statistics": {
            "type": "object",
            "properties": {
              "completed_participants": {
                "type": "integer"
              },
              "incomplete_participants": {
                "type": "integer"
              }
            }
          }
        }
      },
      "Quiz": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "duration"
        ]
      },
      "Option": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "text"
        ]
      },
      "OptionWithAnswer": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "is_correct": {
            "type": "boolean"
          }
        },
        "required": [
          "text",
          "is_correct"
        ]
      },
      "Question": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "multiple",
              "single",
              "true_false"
            ]
          },
          "quiz_id": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Option"
            }
          }
        },
        "required": [
          "name",
          "type",
          "quiz_id"
        ]
      },
      "QuestionWithAnswer": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "multiple",
              "single",
              "true_false"
            ]
          },
          "quiz_id": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionWithAnswer"
            }
          }
        },
        "required": [
          "name",
          "type",
          "quiz_id"
        ]
      },
      "CanTakeQuizResponse": {
        "type": "object",
        "properties": {
          "canTakeQuiz": {
            "type": "boolean"
          }
        }
      },
      "QuizSubmissionRequest": {
        "type": "object",
        "properties": {
          "answers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "question_id": {
                  "type": "string"
                },
                "selected_options": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "written_answer": {
                  "type": "string"
                }
              },
              "required": [
                "question_id"
              ]
            }
          }
        },
        "required": [
          "answers"
        ]
      },
      "QuizSubmissionAnswer": {
        "type": "object",
        "properties": {
          "question_id": {
            "type": "string"
          },
          "selected_options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "written_answer": {
            "type": "string"
          },
          "is_correct": {
            "type": "boolean"
          }
        }
      },
      "QuizSubmissionResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "quiz_id": {
            "type": "string"
          },
          "course_id": {
            "type": "string"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizSubmissionAnswer"
            }
          },
          "score": {
            "type": "number"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "QuizResponseWithoutAnswers": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "quiz": {
            "$ref": "#/components/schemas/Quiz"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            }
          }
        }
      },
      "QuizResponseWithAnswers": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "quiz": {
            "$ref": "#/components/schemas/Quiz"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionWithAnswer"
            }
          }
        }
      },
      "CreateQuizRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "program_id": {
            "type": "string"
          },
          "questions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "multiple",
                    "single",
                    "true_false"
                  ]
                },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      },
                      "is_correct": {
                        "type": "boolean"
                      },
                      "score": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "text",
                      "is_correct"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "type",
                "options"
              ]
            }
          }
        },
        "required": [
          "name",
          "duration",
          "program_id",
          "questions"
        ]
      },
      "UpdateQuizRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "questions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "multiple",
                    "single",
                    "true_false"
                  ]
                },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      },
                      "isCorrect": {
                        "type": "boolean"
                      },
                      "score": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "text",
                      "isCorrect"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "type",
                "options"
              ]
            }
          }
        }
      },
      "StudentResultResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "program": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "enrollment": {
            "type": "object",
            "properties": {
              "enrolled_at": {
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "type": "string"
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "is_completed": {
                "type": "boolean"
              }
            }
          },
          "progress": {
            "type": "object",
            "properties": {
              "total_contents": {
                "type": "number"
              },
              "completed_contents": {
                "type": "number"
              },
              "progress_percentage": {
                "type": "number"
              },
              "completed_content_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "quiz_result": {
            "type": "object",
            "properties": {
              "submission_id": {
                "type": "string"
              },
              "submitted_at": {
                "type": "string",
                "format": "date-time"
              },
              "score": {
                "type": "number"
              },
              "total_questions": {
                "type": "number"
              },
              "percentage": {
                "type": "number"
              },
              "status": {
                "type": "string"
              },
              "feedback": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          },
          "summary": {
            "type": "object",
            "properties": {
              "can_take_quiz": {
                "type": "boolean"
              },
              "has_quiz": {
                "type": "boolean"
              },
              "has_submitted_quiz": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "DetailedStudentResultResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "program": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "quiz_id": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "enrollment": {
            "type": "object",
            "properties": {
              "enrolled_at": {
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "type": "string"
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "is_completed": {
                "type": "boolean"
              }
            }
          },
          "content_progress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "content_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "order": {
                  "type": "number"
                },
                "is_completed": {
                  "type": "boolean"
                },
                "completed_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "time_spent": {
                  "type": "number"
                }
              }
            }
          },
          "quiz_result": {
            "type": "object",
            "properties": {
              "submission_id": {
                "type": "string"
              },
              "submitted_at": {
                "type": "string",
                "format": "date-time"
              },
              "score": {
                "type": "number"
              },
              "total_questions": {
                "type": "number"
              },
              "percentage": {
                "type": "number"
              },
              "status": {
                "type": "string"
              },
              "feedback": {
                "type": "string",
                "nullable": true
              },
              "detailed_answers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "question_id": {
                      "type": "string"
                    },
                    "question_text": {
                      "type": "string"
                    },
                    "question_type": {
                      "type": "string"
                    },
                    "selected_options": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "written_answer": {
                      "type": "string",
                      "nullable": true
                    },
                    "is_correct": {
                      "type": "boolean"
                    },
                    "correct_options": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "nullable": true
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Content": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "video",
              "text",
              "quiz",
              "assignment",
              "file",
              "link"
            ]
          },
          "content_type": {
            "type": "string"
          },
          "program_id": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "metadata": {
            "type": "string"
          },
          "file_url": {
            "type": "string"
          },
          "preview_image": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "title",
          "type"
        ]
      },
      "CreateContentRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "video",
              "text",
              "quiz",
              "assignment",
              "file",
              "link"
            ]
          },
          "content_type": {
            "type": "string"
          },
          "program": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "metadata": {
            "type": "string"
          },
          "file_url": {
            "type": "string"
          },
          "preview_image": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "type"
        ]
      },
      "UpdateContentRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "video",
              "text",
              "quiz",
              "assignment",
              "file",
              "link"
            ]
          },
          "content_type": {
            "type": "string"
          },
          "program": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "metadata": {
            "type": "string"
          },
          "file_url": {
            "type": "string"
          },
          "preview_image": {
            "type": "string"
          }
        }
      },
      "ContentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "content": {
            "$ref": "#/components/schemas/Content"
          }
        }
      },
      "ContentsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content"
            }
          }
        }
      },
      "ContentWithProgramResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "video",
                  "text",
                  "quiz",
                  "assignment",
                  "file",
                  "link"
                ]
              },
              "content_type": {
                "type": "string"
              },
              "program": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "order": {
                "type": "number"
              },
              "metadata": {
                "type": "string"
              },
              "file_url": {
                "type": "string"
              },
              "preview_image": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "ParsedMetadataResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "video",
                  "text",
                  "quiz",
                  "assignment",
                  "file",
                  "link"
                ]
              },
              "content_type": {
                "type": "string"
              },
              "program_id": {
                "type": "string"
              },
              "order": {
                "type": "number"
              },
              "metadata": {
                "type": "string"
              },
              "file_url": {
                "type": "string"
              },
              "preview_image": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "parsedMetadata": {
                "type": "object"
              }
            }
          }
        }
      },
      "DeleteContentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Content"
          }
        }
      },
      "PreviewContentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "content_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "video",
                    "text",
                    "quiz",
                    "assignment",
                    "file",
                    "link"
                  ]
                },
                "orders": {
                  "type": "number"
                }
              }
            }
          },
          "count": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "program_id": {
            "type": "string"
          }
        }
      },
      "PlaceholderResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Slot": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "start_time": {
            "type": "string"
          },
          "end_time": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "start_time",
          "end_time"
        ]
      },
      "CreateSlotRequest": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string"
          },
          "end_time": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "start_time",
          "end_time"
        ]
      },
      "SlotResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "slot": {
            "$ref": "#/components/schemas/Slot"
          }
        }
      },
      "SlotsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Slot"
            }
          }
        }
      },
      "Enroll": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "program_id": {
            "type": "string"
          },
          "enrolled_at": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "default": "active"
          },
          "progress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "content_id": {
                  "type": "string"
                },
                "complete": {
                  "type": "boolean"
                }
              }
            }
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "user_id",
          "program_id"
        ]
      },
      "CreateEnrollRequest": {
        "type": "object",
        "properties": {
          "program_id": {
            "type": "string"
          }
        },
        "required": [
          "program_id"
        ]
      },
      "EnrollResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/Enroll"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "EnrollmentsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Enroll"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DeleteEnrollResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Assessment": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "score": {
            "type": "number"
          },
          "result_json": {
            "type": "object"
          },
          "action_id": {
            "type": "string"
          },
          "taken_at": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "user_id",
          "type",
          "action_id"
        ]
      },
      "CreateAssessmentRequest": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "score": {
            "type": "number"
          },
          "result": {
            "type": "object"
          },
          "details": {
            "type": "object"
          },
          "taken_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "user",
          "type"
        ]
      },
      "UpdateAssessmentRequest": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "score": {
            "type": "number"
          },
          "result": {
            "type": "object"
          },
          "details": {
            "type": "object"
          },
          "taken_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubmitTestRequest": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "score",
          "type",
          "results"
        ]
      },
      "SubmitTestResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "assessment_id": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string"
                  }
                }
              },
              "test_result": {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string"
                  },
                  "taken_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "result_json": {
                    "type": "object",
                    "properties": {
                      "score": {
                        "type": "number"
                      },
                      "risk_level": {
                        "type": "string"
                      },
                      "results": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "recommendations": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "recommended_action": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "range": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string"
                  },
                  "risk_level": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AssessmentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/Assessment"
          }
        }
      },
      "AssessmentsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assessment"
            }
          }
        }
      },
      "AssessmentsWithCountResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assessment"
            }
          },
          "count": {
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AssessmentsWithCreateAtResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                },
                "result_json": {
                  "type": "object"
                },
                "action_id": {
                  "type": "string"
                },
                "taken_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "create_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "user_id": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "count": {
            "type": "number"
          }
        }
      },
      "DeleteAssessmentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Option": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "score": {
            "type": "number"
          }
        },
        "required": [
          "text",
          "score"
        ]
      },
      "AssessmentQuestion": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CRAFFT",
              "ASSIST"
            ]
          },
          "order": {
            "type": "number"
          },
          "text": {
            "type": "string"
          },
          "questionType": {
            "type": "string",
            "enum": [
              "single",
              "multiple"
            ],
            "default": "single"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Option"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "type",
          "order",
          "text"
        ]
      }
    }
  }
}